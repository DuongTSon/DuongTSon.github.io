q()
load("C:\\Users\\Duong\\Desktop\\MATLAB project\\Data\\.RData")
ls()
remove(quarter,ts,a.out,a.out2)
ls()
install.packages("Hmisc")
library(Hmisc)
install.packages("mice")
library(mice)
imputation
summary(umputation)
summary(imputation)
md.pattern(imputation)
install.packages("VIM"0
install.packages("VIM")
library(VIM)
mice_plot<-aggr(imputation,col=("navyblue","yellow"),numbers=T,sortVars=T,labels=name(imputation))
mice_plot<-aggr(imputation,col=('navyblue','yellow'),numbers=T,sortVars=T,labels=name(imputation))
mice_plot<-aggr(imputation,col=('navyblue','yellow'),numbers=T,sortVars=T,labels=names(imputation),cex.axis=.7,gap=3,ylab=c("Missing data","Pattern"))
mice_plot<-aggr(imputation,col=c('navyblue','yellow'),numbers=T,sortVars=T,labels=names(imputation),cex.axis=.7,gap=3,ylab=c("Missing data","Pattern"))
imputed_data<-mice(imputation,m=5,maxit=50,method='pmm',seed=500)
summary(imputed_data)
imputed_data$V3
completeData<-complete(imputed_data,2)
completeData
completeData<-complete(imputed_data,1)
completeData
completeData<-complete(imputed_data,3)
completeData
completeData<-complete(imputed_data,5)
completeData
fit.cc<-lm(V2~V3)
fit.cc<-lm(imputation$V2~imputation$V3)
fit.cc<-lm(imputation.V2~imputation.V3)
fit.cc<-lm(imputation[,2]~imputation[,3])
summary(fit.cc)
complete
completeData
plot(completeData[,3])
imputed_data<-mice(imputation,m=1,maxit=1000,method='pmm',seed=500)
completedata<-complete(imputed_data,1)
plot(completedata)
plot(completedata[,3])
ccompletedata
completedata
ls()
library(Amelia)
a.out<-amelia(imputation,m=5,ts=V1)
a.out<-amelia(imputation,m=5,ts=imputation$V1)
a.out<-amelia(imputation,m=5,ts="year")
a.out<-amelia(imputation,m=5,ts="V1")
a.out<-amelia(imputation,m=5,ts=imputation[,1])
a.out<-amelia(imputation,m=5)
a.out$imputation[[3]]
a.out$imputation[[2]]
a.out$imputation[[1]]
a.out$imputation[[4]]
a.out$imputation[[5]]
hist(a.out$imputation[[3]][,3],col="grey",border="white")
hist(a.out$imputation[[1]][,3],col="grey",border="white")
hist(a.out$imputation[[2]][,3],col="grey",border="white")
hist(a.out$imputation[[5]][,3],col="grey",border="white")
plot(a.out$imputation[[5]][,3])
hist(log(a.out$imputation[[2]][,3]),col="grey",border="white")
hist(diff(log(a.out$imputation[[2]][,3])),col="grey",border="white")
amelia(imputation,idvars="V1")
colnames(imputation)
class(imputation)
amelia(imputation,idvars=1)
a.more<-amelia(imputation,idvars=1)
plot(a.more$imputation[[1]][,3])
a.more$imputation[[1]][,3]
a.more$imputation[[2]][,3]
a.more$imputation[[2]]
a.more$imputation[[3]]
a.more$imputation[[2]]
a.more$imputation[[5]]
a.out.time<-amelia(imputation,ts=1,polytime=2,intercs=T,p2s=2)
a.out.time<-amelia(imputation,ts=1,cs=2,polytime=2,intercs=T,p2s=2)
a.out.time<-amelia(imputation,ts=1,polytime=2)
a.out.time
a.out2<-amelia(imputation,ts=1,cs=2,lags=3,leads=3)
imputation
a.out2<-amelia(imputation,ts=1,cs=1,lags=2,leads=2)
a.out2<-amelia(imputation,ts=1,cs=2)
a.out2<-amelia(imputation,ts=1,lags=3,leads=3)
a.out2
a.out2$imputation[[1]]
tscsPlot(a.out2,var=3)
tscsPlot(a.out2,cs="Credit",var=3)
tscsPlot(a.out2,cs=1,var=3)
plot(a.out2$imputation[[1]][,3]
)
plot(a.out2$imputation[[2]][,3])
plot(a.out2$imputation[[3]][,3])
ls()
remove(m.more,a.out.time,completedata,completeData,mice_plot,fit.cc,imputed_data)
ls(0
)
ls()
remove.(a.more)
remove(a.more)
ls()
acf(gdp)
Box.test(gdp,lag=2,type='Ljung')
plot(log(gdp))
plot(gdp)
gdp
gdp_ts<-ts(gdp,start=c(2000,1),end=c(2015,4),frequency=4)
plot(gdp_ts)
plot(log(gdp_ts))
plot(diff(log(gdp_ts)))
m2
m2_ts<-ts(m2,start=c(2000,1),end=c(2015,4),frequency=4)
plot(m2_ts)
acf(m2_ts)
acf(diff(log(m2_ts)))
help(diff)
acf(diff(log(m2_ts),lag=4))
plot(diff(log(m2_ts),lag=4))
pacf(diff(log(m2_ts),lag=4),lag.max=10)
plot(diff(log(m2_ts),lag=4))
save.image("C:\\Users\\Duong\\Desktop\\MATLAB project\\MacroModel")
q()
load("C:\\Users\\Duong\\Desktop\\MATLAB project\\MacroModel\\.RData")
ls()
search()
chartSeries(on)
mm[[2]]
search()
install.packages("quantmod")
library(quantmod)
chartSeries(on)
ts<-ts(on,date)
ts<-ts(data.frame(on,date))
dim(ts)
chartSeries(ts)
ts<-xts(data.frame(on,date))
hel(xts)
help(xts)
ts<-xts(data.frame(on,date),order.by=date)
ts
ts<-xts(on,order.by=date)
ts
chartSeries(ts)
q()
install.packages("dlm")
library(dlm)
data(Nile)
NilePoly<-dlmModPoly(order=1,dV=15100,dW=1468)
unlist(NilePoly)
NilePoly
NileFilt<-dlmFilter(Nile,NilePoly)
n<-length(NileFilt)
attach(NileFilt)
help(attach)
q()
library(urca)
data(npext)
str(npext)
y<-ts(na.omit(npext$unemploy),start=1909,end=1988,frequency=1)
op<-par(no.readonly=T)
layout(matrix(c(1,1,2,3),2,2,byrow=T)
)
plot(y,ylab="Unemployment rate")
acf(y,main="Autocorrelation",ylab="",ylim=c(-1,1))
matrix(c(1,1,2,3),2,2,)
pacf(y,main="Partial Correlation",ylab="",ylim=c(-1,1))
par(op)
q()
install.packages("TFX")
library(quantmod)
getSymbols("CURRENCY:EURUSD",src="google")
getSymbols("EURUSD",src="google")
library(quantmod)
library(jsonlite)
json_file<-"http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/DOT/.VN.TXG_FOB_USD?startPeriod=2000&endPeriod=2013"
data<-fromJSON(json_file,simplifyDataFrame)
lst<-list(a=list(b=list()))
remove(list=ls())
json_file<-"http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/DOT/.VN.TXG_FOB_USD?startPeriod=2000&endPeriod=2013"
data<-fromJSON(json_file)
data[[1]][["DataSet"]]
d<-data[[1]][["DataSet"]]
d[[1]][["Series"]]
d[["Series"]]
class(d)
str(d)
class(d[["Series"]])
d<-data[[1]][["DataSet"]]
d<-d[[Series]]
d<-d[["Series""]]
""
d<-d[["Series]]
""
"
d<-d[["Series"]]
d$@INDICATOR
d@INDICATOR
d$Obs
library(reshape2)
melt(d)
summary(d)
d[@FREQ="Q"]
d[d[["@FREQ"]]="Q"]
d[d[["@FREQ"]]=="Q"]
d[d[1]=="Q"]
for (i in 1:10){}
d1<-d$Obs[1]
d1
for (i in 1:10){
d1<-merge(d1,d$Obs[i],by="@TIME_PERIOD")
}
d$@FREQ
d[["@FREQ"]]
d<-d[d[["@FREQ"]]=="A"&d[["@INDICATOR"]]=="TXG_FOB_USD"]
d<-d[d[["@FREQ"]]=="A"]
d[d[["@FREQ"]]=="Q"]
d<-d[d[1]=="A"]
d
str(d)
summary(d)
d1<-d$Obs[1]
d1<-d[1]
d<-data[[1]][["DataSet"]]
d<-d[["Series"]]
str(d)
d[d[1]=="A"]
names(data)
names(d)
d<-d[d[1]=="A" & d[4]=="US"]
d
d.matrix<-matrix(0,nrow=Inf,ncol=8)
help(assign)
country<-c("US","JP","CN","KR","SG","EU","TW","TH")
json_file<-"http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/DOT/.VN.TXG_FOB_USD?startPeriod=2000&endPeriod=2016"
data<-fromJSON(json_file)
d<-data[[1]][["DataSet"]]
d<-d[["Series"]]
country<-c("US","JP","CN","KR","SG","EU","TW","TH")
for (i in country){
d<-d[d[1]=="A" & d[4]==i]
assign(i,d[[7]])
}
for (i in country){
d<-d[d[1]=="A" & d[4]==i]
assign(i,d[7])
}
remove(list=ls())
json_file<-"http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/DOT/.VN.TXG_FOB_USD?startPeriod=2000&endPeriod=2016"
data<-fromJSON(json_file)
d<-data[[1]][["DataSet"]]
d<-d[["Series"]]
country<-c("US","JP","CN","KR","SG","EU","TW","TH")
for (i in country){
d<-d[d[1]=="M" & d[4]==i]
assign(i,d[7])
}
library(zoo)
help("yearmon")
as.yearmon(US[1],format="%Y-%m")
as.yearmon(US[,1],format="%Y-%m")
US[1]
as.yearmon(US[["@TIME_PERIOD"]],format="%Y-%m")
US[["@TIME_PERIOD"]]
US[[1]][["@TIME_PERIOD"]]
as.yearmon(US[[1]][["@TIME_PERIOD"]],format="%Y-%m")
names(US)
names(US[[1]])
data<-fromJSON(json_file)
d<-data[[1]][["DataSet"]]
d<-d[["Series"]]
country<-c("US","JP","CN","KR","SG","EU","TW","TH")
for (i in country){
d1<-d[d[1]=="M" & d[4]==i]
d1<-d[7]
as.yearmon(d1[[1]][["@TIME_PERIOD"]],format="%Y-%m")
names(d1[[1]])<-c("month","export","status")
assign(i,d1[[1]])
}
d[7]
remove(list=ls())
json_file<-"http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/DOT/.VN.TXG_FOB_USD?startPeriod=2000&endPeriod=2016"
data<-fromJSON(json_file)
d<-data[[1]][["DataSet"]]
d<-d[["Series"]]
country<-c("US","JP","CN","KR","SG","EU","TW","TH")
for (i in country){
d1<-d[d[1]=="M" & d[4]==i]
d1<-d1[7]
as.yearmon(d1[[1]][["@TIME_PERIOD"]],format="%Y-%m")
names(d1[[1]])<-c("month","export","status")
assign(i,d1[[1]])
}
str(US)
for (i in country){
d1<-d[d[1]=="M" & d[4]==i]
d1<-d1[7][1:2]
d1[[1]][["@TIME_PERIOD"]]<-as.yearmon(d1[[1]][["@TIME_PERIOD"]],format="%Y-%m")
names(d1[[1]])<-c("month","export")
assign(i,d1[[1]])
}
d1<-d[d[1]=="M" & d[4]=="US"]
d1<-d1[7][1:2]
d1
for (i in country){
d1<-d[d[1]=="M" & d[4]=="US"]
d1<-d1[7]
d1[[1]][["@TIME_PERIOD"]]<-as.yearmon(d1[[1]][["@TIME_PERIOD"]],format="%Y-%m")
names(d1[[1]])<-c("month","export","status")
assign(i,d1[[1]])
}
export<-US
for (i in country){
export<-merge(export,i,by="month")
}
help("merge")
export<-US
for (i in country){
export<-merge(export,i,all=T)
}
for (i in country){
d1<-d[d[1]=="M" & d[4]=="US"]
d1<-d1[7]
d1[[1]][["@TIME_PERIOD"]]<-as.yearmon(d1[[1]][["@TIME_PERIOD"]],format="%Y-%m")
d1[[1]][["@OBS_VALUE"]]<-as.numeric(d1[[1]][["@OBS_VALUE"]])
names(d1[[1]])<-c("month","export","status")
assign(i,d1[[1]])
}
plot(US,type="l")
plot(US[,1:2],type="l")
setwd("C:/Users/Duong/Desktop/MATLAB project/MacroModel/Slides_final")
setwd("C:/Users/Duong/Desktop/MATLAB project/MacroModel/Slides_final/DuongTSon.github.io")
setwd("C:/Users/Duong/Desktop/MATLAB project/MacroModel/Slides_final")
setwd("C:/Users/Duong/Desktop/MATLAB project/MacroModel/Slides_final/DuongTSon.github.io")
libarry(slidify)
libary(slidify)
library(slidify)
publish_github("DuongTSon.github.io",username="DuongTSon")
publish_github("DuongTSon.github.io")
publish_github("DuongTSon.github.io",username=getOption("DuongTSon"))
publish_github("DuongTSon.github.io",username="DuongTSon")
